Starting audit...
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\main\Main.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\main\Main.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\main\Main.java:87:32: Parameter o1 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\main\Main.java:87:42: Parameter o2 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\main\Main.java:92:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:1:9: Name 'MyClasses.Changes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:14:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:18:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:22:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:26:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:30:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:34:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:46:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:50:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\AnnualChanges.java:50:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:1:9: Name 'MyClasses.Changes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:3:8: Unused import - MyClasses.Presents.Gift. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:13:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:17:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:21:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:25:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:29:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:33:5: Class 'ChildrenUpdate' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdate' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Changes\ChildrenUpdate.java:33:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Baby.java:1:9: Name 'MyClasses.Children' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Baby.java:3:32: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Baby.java:5:17: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:1:9: Name 'MyClasses.Children' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:26:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'calculateAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'calculateAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:26:41: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:26:54: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:31:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'calculateReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'calculateReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:31:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:31:40: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:39:32: Parameter o1 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:39:41: Parameter o2 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:62:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:66:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:70:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:74:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:78:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:82:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:86:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:90:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:94:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:98:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:102:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'accessNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'accessNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:106:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:110:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:114:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:118:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:122:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:126:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:130:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:134:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:138:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:142:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:146:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:150:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:152:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:153:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:154:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:155:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:156:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:157:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:158:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:159:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:160:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:161:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:162:54: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:165:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'displayReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'displayReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:165:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Child.java:167:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Kid.java:1:9: Name 'MyClasses.Children' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Kid.java:3:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Kid.java:5:16: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Teen.java:1:9: Name 'MyClasses.Children' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\Teen.java:5:17: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\YoungAdult.java:1:9: Name 'MyClasses.Children' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\YoungAdult.java:3:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Children\YoungAdult.java:5:23: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:1:9: Name 'MyClasses.Factory' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:10:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:13:37: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:13:50: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:14:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:15:34: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:18:33: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:21:34: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Factory\ChildrenFactory.java:24:41: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:1:9: Name 'MyClasses.Presents' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:10:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:14:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:18:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:22:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:26:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Presents\Gift.java:30:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:1:9: Name 'MyClasses.SantaClaus' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:9:1: Class Santa should be declared as final. [FinalClass]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:18:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:27:32: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:31:32: Parameter o1 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\SantaClaus\Santa.java:31:42: Parameter o2 should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\ApplyStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\ApplyStrategy.java:11:5: Class 'ApplyStrategy' looks like designed for extension (can be subclassed), but the method 'applyStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplyStrategy' final or making the method 'applyStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\ApplyStrategy.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\ApplyStrategy.java:11:43: Parameter initialList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:4:1: Redundant import from the same package - MyClasses.Strategies.UpdateChildrenStrategy. [RedundantImport]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:8:11: Variable 'child' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:10:31: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:14:5: Class 'BabyUpdateStrategy' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BabyUpdateStrategy' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:15:39: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:15:45: 'child' hides a field. [HiddenField]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\BabyUpdateStrategy.java:16:31: '10d' is a magic number. [MagicNumber]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:4:1: Redundant import from the same package - MyClasses.Strategies.UpdateChildrenStrategy. [RedundantImport]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:8:11: Variable 'child' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:10:30: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:14:5: Class 'KidUpdateStrategy' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KidUpdateStrategy' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:15:39: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\KidUpdateStrategy.java:15:45: 'child' hides a field. [HiddenField]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:7:57: Parameter strategy should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:7:74: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:8:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:9:34: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:12:33: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:15:34: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\StrategyFactory.java:18:41: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:4:1: Redundant import from the same package - MyClasses.Strategies.UpdateChildrenStrategy. [RedundantImport]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:8:11: Variable 'child' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:10:31: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:14:5: Class 'TeenUpdateStrategy' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TeenUpdateStrategy' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:15:39: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:15:45: 'child' hides a field. [HiddenField]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\TeenUpdateStrategy.java:23:67: '*' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\UpdateChildrenStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\UpdateChildrenStrategy.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:1:9: Name 'MyClasses.Strategies' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:4:8: Unused import - MyClasses.Children.YoungAdult. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:5:1: Redundant import from the same package - MyClasses.Strategies.UpdateChildrenStrategy. [RedundantImport]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:9:11: Variable 'child' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:11:37: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:15:5: Class 'YoungAdultUpdateStrategy' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdultUpdateStrategy' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:16:39: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\MyClasses\Strategies\YoungAdultUpdateStrategy.java:16:45: 'child' hides a field. [HiddenField]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:1:9: Name 'Reader' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:28:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:32:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:40:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:44:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:49:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:51:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:52:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:53:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:54:53: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:55:65: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:56:63: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:60:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'display' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'display' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:63:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:66:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\Input.java:69:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:1:9: Name 'Reader' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:25:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'read' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'read' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:39:35: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:40:33: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:43:59: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:43:60: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:46:58: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:46:59: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:49:67: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Reader\InputLoader.java:49:68: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:1:9: Name 'SimulationFlow' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:6:8: Unused import - MyClasses.Factory.ChildrenFactory. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:10:8: Unused import - MyClasses.Strategies.StrategyFactory. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:11:8: Unused import - MyClasses.Strategies.UpdateChildrenStrategy. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:14:8: Unused import - enums.Category. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:18:1: Class Initialize should be declared as final. [FinalClass]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:35:45: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:49:46: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:49:59: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:54:44: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:54:57: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:143: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:154:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:154:43: Parameter childrenList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:154:74: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:155:43: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Initialize.java:155:56: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:1:9: Name 'SimulationFlow' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:3:8: Unused import - MyClasses.Changes.AnnualChanges. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:8:8: Unused import - Reader.Input. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:14:1: Class Updates should be declared as final. [FinalClass]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:29:30: Parameter childrenList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:38:41: Parameter childrenList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:48:51: Parameter childrenList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:49:51: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:59:29: Parameter santa should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:59:42: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:60:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:66:43: Parameter initialList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:67:43: Parameter updatedList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:77:39: Parameter initialList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:78:39: Parameter updatedList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:84:29: Parameter childrenList should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\SimulationFlow\Updates.java:85:29: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\Output.java:1:9: Name 'Writer' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\Output.java:10:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\Output.java:14:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'setAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'setAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\Output.java:14:35: Parameter annualChildren should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:1:9: Name 'Writer' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:3:8: Unused import - MyClasses.Children.Child. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:4:8: Unused import - com.fasterxml.jackson.core.JsonGenerator. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:7:8: Unused import - lombok.val. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:10:8: Unused import - java.io.FileWriter. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:12:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:16:5: Class 'WriteOutput' looks like designed for extension (can be subclassed), but the method 'write' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WriteOutput' final or making the method 'write' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:16:23: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\olaru\Desktop\OOP_Project\.\src\Writer\WriteOutput.java:16:38: Parameter outputPath should be final. [FinalParameters]
Audit done.
Checkstyle ends with 244 errors.
